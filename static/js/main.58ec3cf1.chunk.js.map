{"version":3,"sources":["components/Header.js","components/Todo.js","components/Todo-list.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","useState","text","setText","className","onChange","e","target","value","onKeyPress","key","addTodo","id","Date","valueOf","isCompleted","onAddTodo","Todo","getTodoEditingId","todoEditingId","onEditTodo","markCompleted","removeTodo","isEditing","textEdit","setTextEdit","editTodo","index","type","onBlur","checked","onClick","onDoubleClick","TodoList","showTodoList","todoList","map","todo","isCheckedAll","htmlFor","checkAllTodos","FilterBtn","title","isActive","link","href","Footer","statusFilter","setStatusFilter","clearCompletedTodo","numsOfTodoLeft","numsOfTodoCompleted","filterBtns","btn","isNotCheckedAll","todos","find","filterTodoList","status","filter","App","state","setState","preState","list","splice","updatedTodolist","this","length","PureComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQA4BeA,EA1BA,SAACC,GACZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAaA,OACI,yBAAQC,UAAU,SAAlB,UACI,0CACA,uBACIA,UAAU,WACVC,SAAU,SAAAC,GAAC,OAAIH,EAAQG,EAAEC,OAAOC,QAChCC,WAAY,SAAAH,GAAC,OAjBP,SAAAA,GACA,UAAVA,EAAEI,KAAmBR,IACrBI,EAAEC,OAAOC,MAAQ,GACjBR,EAAMW,QAAQ,CACVC,IAAI,IAAIC,MAAOC,UACfZ,KAAMA,EACNa,aAAa,KAWIC,CAAUV,UCwB5BW,EA5CF,SAACjB,GACV,IAAOY,EAAiGZ,EAAjGY,GAAIV,EAA6FF,EAA7FE,KAAMa,EAAuFf,EAAvFe,YAAaG,EAA0ElB,EAA1EkB,iBAAkBC,EAAwDnB,EAAxDmB,cAAeC,EAAyCpB,EAAzCoB,WAAYC,EAA6BrB,EAA7BqB,cAAeC,EAActB,EAAdsB,WACpFC,EAAYJ,IAAkBP,EACpC,EAAgCX,mBAASC,GAAzC,mBAAOsB,EAAP,KAAiBC,EAAjB,KAEMC,EAAW,WACbN,EAAW,CACPR,GAAKA,EACLV,KAAOsB,EACPT,YAAcA,GACff,EAAM2B,QAGb,OACI,oBAAIvB,UAAS,UAAKW,EAAc,YAAc,GAAjC,YAAuCQ,EAAY,UAAY,IAA5E,SAESA,EAYG,uBACInB,UAAU,OACVwB,KAAK,OACLpB,MAAOgB,EACPnB,SAAU,SAAAC,GAAC,OAAImB,EAAYnB,EAAEC,OAAOC,QACpCqB,OAAQ,kBAAMH,KACdjB,WAAa,SAACH,GACI,UAAVA,EAAEI,KAAiBgB,OAlB/B,sBAAKtB,UAAU,OAAf,UACI,uBACIwB,KAAK,WACLxB,UAAU,SACV0B,QAASf,EACTgB,QAAS,kBAAMV,EAAcT,MAEjC,uBAAOoB,cAAe,kBAAMd,EAAiBN,IAA7C,SAAmDV,IACnD,wBAAQE,UAAU,UAAU2B,QAAS,kBAAMT,EAAWV,YCA/DqB,EAxBE,SAACjC,GACd,IAAMkC,EAAelC,EAAMmC,SAASC,KAAI,SAACC,EAAMV,GAAP,OACpC,wBAAC,EAAD,2BACQU,GADR,IAEI3B,IAAK2B,EAAKzB,GACVe,MAAOA,EACPT,iBAAkBlB,EAAMkB,iBACxBC,cAAenB,EAAMmB,cACrBC,WAAYpB,EAAMoB,WAClBC,cAAerB,EAAMqB,cACrBC,WAAYtB,EAAMsB,iBAG1B,OACI,0BAASlB,UAAU,OAAnB,UACI,uBAAOwB,KAAK,WAAWxB,UAAU,aAAa0B,QAAS9B,EAAMsC,eAC7D,uBAAOC,QAAQ,aAAaR,QAAS/B,EAAMwC,gBAC3C,oBAAIpC,UAAU,YAAd,SACK8B,QCyBXO,EAAY,SAACzC,GACf,IAAQ0C,EAAmC1C,EAAnC0C,MAAOX,EAA4B/B,EAA5B+B,QAASY,EAAmB3C,EAAnB2C,SAAUC,EAAS5C,EAAT4C,KAClC,OACI,mCACI,6BACI,mBACIC,KAAI,YAAOD,GACXxC,UAAWuC,EAAW,WAAa,GACnCZ,QAASA,EAHb,SAKKW,SAONI,EA7DA,SAAC9C,GACZ,IAAO+C,EAA0F/C,EAA1F+C,aAAcC,EAA4EhD,EAA5EgD,gBAAiBC,EAA2DjD,EAA3DiD,mBAAoBC,EAAuClD,EAAvCkD,eAAgBC,EAAuBnD,EAAvBmD,oBACpEC,EAAa,CACf,CACIV,MAAO,MACPC,SAA2B,QAAjBI,EACVhB,QAAS,kBAAMiB,EAAgB,QAC/BJ,KAAM,IAGV,CACIF,MAAO,SACPC,SAA2B,WAAjBI,EACVhB,QAAS,kBAAMiB,EAAgB,WAC/BJ,KAAM,UAGV,CACIF,MAAO,WACPC,SAA2B,aAAjBI,EACVhB,QAAS,kBAAMiB,EAAgB,aAC/BJ,KAAM,aAId,OACI,yBAAQxC,UAAU,SAAlB,UACI,uBAAMA,UAAU,aAAhB,UACI,iCAAS8C,IACT,+BAAQA,EAAiB,EAAI,QAAU,WACvC,4CAEJ,oBAAI9C,UAAU,UAAd,SAEQgD,EAAWhB,KAAI,SAAAiB,GAAG,OACd,cAAC,EAAD,eAA+BA,GAAfA,EAAIX,YAIP,IAAxBS,GAA6B,wBAAQ/C,UAAU,kBAAkB2B,QAASkB,EAA7C,iCCnCpCK,EAAkB,SAACC,GAAD,OAAWA,EAAMC,MAAK,SAAAnB,GAAI,OAAKA,EAAKtB,gBACtD0C,EAAiB,SAACF,EAAOG,GAC7B,OAAQA,GACN,IAAK,MACH,OAAOH,EAET,IAAK,SACH,OAAOA,EAAMI,QAAO,SAAAtB,GAAI,OAAKA,EAAKtB,eAEpC,QACE,OAAOwC,EAAMI,QAAO,SAAAtB,GAAI,OAAIA,EAAKtB,iBAgHxB6C,E,4MA1GbC,MAAQ,CACN1B,SAAW,CACT,CACEvB,GAAI,IACJV,KAAM,SACNa,aAAa,GAGf,CACEH,GAAI,IACJV,KAAM,SACNa,aAAa,IAIjBI,cAAe,GAEfmB,cAAc,EACdS,aAAc,O,EAShBpC,QAAU,SAAC0B,GACT,EAAKyB,UAAS,SAAAC,GAAQ,MACnB,CAAE5B,SAAS,GAAD,mBAAM4B,EAAS5B,UAAf,CAAyBE,S,EAIxCnB,iBAAmB,SAACN,GAClB,EAAKkD,SAAS,CAAE3C,cAAeP,K,EAGjCQ,WAAa,SAACiB,EAAMV,GAChB,IAAkBqC,EAAQ,EAAKH,MAAxB1B,SACP6B,EAAKC,OAAOtC,EAAO,EAAGU,GACtB,EAAKyB,SAAS,CAAC3B,SAAU6B,EAAM7C,cAAe,M,EAGlDE,cAAgB,SAACT,GACf,IAAMsD,EAAkB,EAAKL,MAAM1B,SAASC,KAAI,SAAAC,GAAI,OAAIA,EAAKzB,KAAOA,EAAZ,2BAAqByB,GAArB,IAA2BtB,aAAcsB,EAAKtB,cAAesB,KACrH,EAAKyB,SAAU,CACb3B,SAAU+B,EACV5B,cAAegB,EAAgBY,M,EAInC1B,cAAgB,WACd,MAAiC,EAAKqB,MAA/B1B,EAAP,EAAOA,SAAUG,EAAjB,EAAiBA,aACjB,EAAKwB,SAAS,CACZ3B,SAAUA,EAASC,KAAI,SAAAC,GAAI,kCAAUA,GAAV,IAAgBtB,aAAcuB,OACzDA,cAAeA,K,EAInBU,gBAAkB,SAACD,GACjB,EAAKe,SAAS,CAACf,kB,EAGjBE,mBAAqB,WACnB,IAAOd,EAAY,EAAK0B,MAAjB1B,SACP,EAAK2B,SAAS,CACZ3B,SAAUsB,EAAetB,EAAU,a,EAIvCb,WAAa,SAACV,GACZ,IAAOuB,EAAY,EAAK0B,MAAjB1B,SACP,EAAK2B,SAAS,CACZ3B,SAAUA,EAASwB,QAAO,SAAAtB,GAAI,OAAIA,EAAKzB,KAAOA,Q,+DApDlD,WACEuD,KAAKL,SAAS,CACZxB,cAAegB,EAAgBa,KAAKN,MAAM1B,c,oBAsD9C,WACE,OACE,sBAAK/B,UAAU,UAAf,UACE,cAAC,EAAD,CACEO,QAASwD,KAAKxD,UAEhB,cAAC,EAAD,CACEwB,SAAUsB,EAAeU,KAAKN,MAAM1B,SAAUgC,KAAKN,MAAMd,cACzD7B,iBAAkBiD,KAAKjD,iBACvBC,cAAegD,KAAKN,MAAM1C,cAC1BC,WAAY+C,KAAK/C,WACjBC,cAAe8C,KAAK9C,cACpBiB,aAAc6B,KAAKN,MAAMvB,aACzBE,cAAe2B,KAAK3B,cACpBlB,WAAY6C,KAAK7C,aAGnB,cAAC,EAAD,CACE0B,gBAAiBmB,KAAKnB,gBACtBD,aAAcoB,KAAKN,MAAMd,aACzBE,mBAAoBkB,KAAKlB,mBACzBC,eAAgBO,EAAeU,KAAKN,MAAM1B,SAAU,UAAUiC,OAC9DjB,oBAAqBM,EAAeU,KAAKN,MAAM1B,SAAU,aAAaiC,gB,GApG9DC,iBCTHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.58ec3cf1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Header = (props) => {\r\n    const [text, setText] = useState(\"\")\r\n    \r\n    const onAddTodo = e => {\r\n        if (e.key === 'Enter' && text) {\r\n            e.target.value = \"\"\r\n            props.addTodo({\r\n                id: new Date().valueOf(),\r\n                text: text,\r\n                isCompleted: false\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>My todos</h1>\r\n            <input \r\n                className=\"new-todo\" \r\n                onChange={e => setText(e.target.value)}\r\n                onKeyPress={e => onAddTodo(e)}\r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState } from 'react'\r\n\r\nconst Todo = (props) => {\r\n    const {id, text, isCompleted, getTodoEditingId, todoEditingId, onEditTodo, markCompleted, removeTodo} = props\r\n    const isEditing = todoEditingId === id\r\n    const [textEdit, setTextEdit] = useState(text)\r\n\r\n    const editTodo = () => {\r\n        onEditTodo({\r\n            id : id,\r\n            text : textEdit,\r\n            isCompleted : isCompleted\r\n        }, props.index)\r\n    }\r\n\r\n    return (\r\n        <li className={`${isCompleted ? 'completed' : ''} ${isEditing ? 'editing' : ''}`}>\r\n            {\r\n                !isEditing ?\r\n                    <div className=\"view\">\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            className=\"toggle\" \r\n                            checked={isCompleted}\r\n                            onClick={() => markCompleted(id)}\r\n                        />\r\n                        <label onDoubleClick={() => getTodoEditingId(id)}>{text}</label>\r\n                        <button className=\"destroy\" onClick={() => removeTodo(id)}></button>\r\n                    </div>\r\n                :\r\n                    <input \r\n                        className=\"edit\" \r\n                        type='text'\r\n                        value={textEdit}\r\n                        onChange={e => setTextEdit(e.target.value)}\r\n                        onBlur={() => editTodo()}\r\n                        onKeyPress={ (e) => {\r\n                            if (e.key === 'Enter') editTodo()\r\n                        }}\r\n                            \r\n                    />\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Todo","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = (props) => {\r\n    const showTodoList = props.todoList.map((todo, index) => \r\n        <Todo \r\n            {...todo}\r\n            key={todo.id}  \r\n            index={index} \r\n            getTodoEditingId={props.getTodoEditingId}\r\n            todoEditingId={props.todoEditingId} \r\n            onEditTodo={props.onEditTodo}  \r\n            markCompleted={props.markCompleted}\r\n            removeTodo={props.removeTodo}\r\n        />\r\n    )\r\n    return (\r\n        <section className=\"main\">\r\n            <input type=\"checkbox\" className=\"toggle-all\" checked={props.isCheckedAll}></input>\r\n            <label htmlFor=\"toggle-all\" onClick={props.checkAllTodos}></label>\r\n            <ul className=\"todo-list\">\r\n                {showTodoList}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\n\r\nconst Footer = (props) => {\r\n    const {statusFilter, setStatusFilter, clearCompletedTodo, numsOfTodoLeft, numsOfTodoCompleted} = props\r\n    const filterBtns = [\r\n        {\r\n            title: 'All',\r\n            isActive: statusFilter === 'All',\r\n            onClick: () => setStatusFilter('All'),\r\n            link: ''\r\n        },\r\n\r\n        {\r\n            title: 'Active',\r\n            isActive: statusFilter === 'Active',\r\n            onClick: () => setStatusFilter('Active'),\r\n            link: 'active'\r\n        },\r\n\r\n        {\r\n            title: 'Complete',\r\n            isActive: statusFilter === 'Complete',\r\n            onClick: () => setStatusFilter('Complete'),\r\n            link: 'complete'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <span className=\"todo-count\">\r\n                <strong>{numsOfTodoLeft}</strong>\r\n                <span>{ numsOfTodoLeft < 2 ? ' item' : ' items'}</span>\r\n                <span> left</span>\r\n            </span>\r\n            <ul className=\"filters\">\r\n                {\r\n                    filterBtns.map(btn => \r\n                        <FilterBtn key={btn.title} {...btn} />\r\n                    )\r\n                }\r\n            </ul>\r\n            {numsOfTodoCompleted !== 0 && <button className=\"clear-completed\" onClick={clearCompletedTodo}>Clear Completed</button>}\r\n        </footer>\r\n    )\r\n}\r\n\r\nconst FilterBtn = (props) => {\r\n    const { title, onClick, isActive, link } = props\r\n    return (\r\n        <>\r\n            <li>\r\n                <a \r\n                    href={`#/${link}`}\r\n                    className={isActive ? 'selected' : ''}   \r\n                    onClick={onClick}\r\n                >\r\n                    {title}\r\n                </a>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer","import './App.css';\nimport Header from './components/Header'\nimport TodoList from './components/Todo-list'\nimport Footer from './components/Footer';\nimport { PureComponent } from 'react';\n\nconst isNotCheckedAll = (todos) => todos.find(todo => !todo.isCompleted)\nconst filterTodoList = (todos, status) => {\n  switch (status) {\n    case 'All':\n      return todos\n     \n    case 'Active': \n      return todos.filter(todo => !todo.isCompleted)\n     \n    default:\n      return todos.filter(todo => todo.isCompleted)\n     \n  }\n}\n\nclass App extends PureComponent {\n  state = {\n    todoList : [\n      {\n        id: '1',\n        text: 'Todo 1',\n        isCompleted: true \n      },\n\n      {\n        id: '2',\n        text: 'Todo 2',\n        isCompleted: true \n      }\n    ],\n\n    todoEditingId: '',\n\n    isCheckedAll: true,\n    statusFilter: 'All'\n  }\n\n  UNSAFE_componentWillMount() {\n    this.setState({\n      isCheckedAll: !isNotCheckedAll(this.state.todoList)\n    })\n  }\n\n  addTodo = (todo) => {\n    this.setState(preState => \n      ({ todoList: [...preState.todoList, todo] })\n    )\n  }\n\n  getTodoEditingId = (id) => {\n    this.setState({ todoEditingId: id })\n  }\n\n  onEditTodo = (todo, index) => {\n      const {todoList : list} = this.state\n      list.splice(index, 1, todo)\n      this.setState({todoList: list, todoEditingId: ''})\n  }\n\n  markCompleted = (id) => {\n    const updatedTodolist = this.state.todoList.map(todo => todo.id === id ? {...todo, isCompleted: !todo.isCompleted} : todo)\n    this.setState(({\n      todoList: updatedTodolist,\n      isCheckedAll: !isNotCheckedAll(updatedTodolist)\n    }))\n  }\n\n  checkAllTodos = () => {\n    const {todoList, isCheckedAll} = this.state\n    this.setState({\n      todoList: todoList.map(todo => ({ ...todo, isCompleted: !isCheckedAll })) ,\n      isCheckedAll: !isCheckedAll\n    })\n  }\n\n  setStatusFilter = (statusFilter) => {\n    this.setState({statusFilter})\n  }  \n\n  clearCompletedTodo = () => {\n    const {todoList} = this.state\n    this.setState({\n      todoList: filterTodoList(todoList, 'Active')\n    })\n  }\n\n  removeTodo = (id) => {\n    const {todoList} = this.state\n    this.setState({\n      todoList: todoList.filter(todo => todo.id !== id)\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"todoapp\">\n        <Header \n          addTodo={this.addTodo} \n        />\n        <TodoList \n          todoList={filterTodoList(this.state.todoList, this.state.statusFilter)} \n          getTodoEditingId={this.getTodoEditingId}\n          todoEditingId={this.state.todoEditingId}\n          onEditTodo={this.onEditTodo}\n          markCompleted={this.markCompleted}\n          isCheckedAll={this.state.isCheckedAll}\n          checkAllTodos={this.checkAllTodos}\n          removeTodo={this.removeTodo}\n        >\n        </TodoList>\n        <Footer\n          setStatusFilter={this.setStatusFilter}\n          statusFilter={this.state.statusFilter}\n          clearCompletedTodo={this.clearCompletedTodo}\n          numsOfTodoLeft={filterTodoList(this.state.todoList, 'Active').length}\n          numsOfTodoCompleted={filterTodoList(this.state.todoList, 'Completed').length}\n        />\n      </div>\n    );\n  }  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}